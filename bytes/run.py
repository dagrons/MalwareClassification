import argparse
from bytes.train_test.train import train_model
from bytes.train_test.test import test_model


def argument_parse():
    """
    Parse arguments and return them.
    :return: User-defined arguments.
    """
    parser = argparse.ArgumentParser(description="Malware Classification.")
    parser.add_argument("mode", help="specify \"train\" or \"test\"")
    parser.add_argument("--epoch", type=int, help="number of iterations to train model (default: 20)", metavar="",
                        default=20)
    parser.add_argument("--model", help="the path of model, which is used to save or load model", metavar="",
                        required=True)
    args = parser.parse_args()

    return args


def run_bytes():
    args = argument_parse()

    """---Check if the command is correct---"""
    if args.mode not in ["train", "test"]:
        print("Please specify the correct mode (\"train\" or \"test\").)\n"
              "Use \"python main.py -h\" to get help.")

    if args.mode == 'train':
        # train model
        train_model(args.model, args.epoch)
    elif args.mode == 'test':
        # test model
        test_model(args.model)
