# -*- coding: utf-8 -*-
import numpy as np


def get_hex_sequence(filename):
    """
    Get hexadecimal sequence from .bytes file.
    :param filename: The name of .bytes file
    :return: The hexadecimal sequence
    """
    # save hexadecimal sequence
    hex_seq = []
    with open(filename, 'r') as f:
        a = f.readline()
        while a:
            line = a.split()[1:]
            hex_seq += line
            a = f.readline()

    return hex_seq


def hex2mat(filename):
    """
    Convert a hexadecimal sequence to a n * width matrix, where width is determined by the file size.
    "??" is ignored.
    :param filename: Given .bytes file
    :return: n * width array
    """
    hex_seq = get_hex_sequence(filename)
    vec_seq = []
    for i in range(len(hex_seq)):
        if hex_seq[i] != "??":
            vec_seq.append(int(hex_seq[i], 16))
        # else:
        #     vec_seq.append(0)
    # Get file size(KB) and change image width according to various file sizes
    if vec_seq == []:
        return None
    
    file_size = len(vec_seq) / 1024.0
    if file_size < 10:
        width = 32
    elif file_size < 30:
        width = 64
    elif file_size < 60:
        width = 128
    elif file_size < 100:
        width = 256
    elif file_size < 200:
        width = 384
    elif file_size < 500:
        width = 512
    elif file_size < 1000:
        width = 768
    else:
        width = 1024

    # fill width
    residual = len(vec_seq) % width
    if residual:
        vec_seq += [0] * (width - residual)

    vec_seq = np.asarray(vec_seq)

    return np.reshape(vec_seq, (-1, width))
