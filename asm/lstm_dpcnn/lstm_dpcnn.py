from asm.dpcnn.dpcnn import DPCNN

import torch
import torch.nn as nn


class LSTM_DPCNN(nn.Module):
    def __init__(self):
        super().__init__()

        """--------LSTM Layer--------"""
        self.lstm = nn.LSTM(input_size=256, hidden_size=128, num_layers=1, batch_first=True)

        """--------DPCNN Layer--------"""
        self.dpcnn = DPCNN(128)

    def forward(self, x):
        lstm, (_, _) = self.lstm(x)
        output = self.dpcnn(torch.transpose(lstm, 2, 1))

        return output
