import os
import pandas as pd
import shutil
import numpy as np

from sklearn.model_selection import train_test_split
from create_data.vectorize_asm import vectorize_asm


def split_dataset(src_path, dest_path, label_path):
	"""
	Split all .asm files into 9 categories, each category representing a family.
	:param src_path: The path of all .asm files.
	:param dest_path: The path of 9 categories.
	:param label_path: The path of labels.csv.
	"""
	# Read labels.csv
	df = pd.read_csv(label_path)

	if not os.path.exists(dest_path):
		os.mkdir(dest_path)
	# Split dataset into 9 categories
	for i in range(1, 10):

		filename_list = df.Id[df['Class'] == i].tolist()
		# Delete the same file names
		filename_list = list(set(filename_list))
		if not os.path.exists(dest_path + str(i)):
			os.mkdir(dest_path + str(i))
		for file_name in filename_list:
			shutil.move(src_path + file_name + '.asm', dest_path + str(i) + '/' + file_name + '.asm')

	os.rmdir(src_path)


def generate_train_test(vec_path):
	"""
	Generate training dataset and test dataset. (training / test = 4/1)
	:param vec_path: The path of all .asm.vec files.
	:return: Training dataset and test dataset.
	"""
	x = []
	y = []
	dirs = os.listdir(vec_path)
	category = 0
	for dir in dirs:
		for vec in os.listdir(vec_path + dir):
			x.append(np.loadtxt(vec_path + dir + '/' + vec))
			y.append(category)
		category += 1

	x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)

	return x_train, x_test, y_train, y_test


if __name__ == "__main__":
	# split_dataset('E:/malware/dataset/', 'E:/malware/data/', 'E:/malware/labels.csv')
	vectorize_asm('E:/malware/dataset/', 'E:/malware/data/', 'E:/malware/model/', 'E:/malware/vec/')
	x_train, x_test, y_train, y_test = generate_train_test('E:/malware/vec/')
