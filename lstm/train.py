import numpy as np

from keras.layers import *
from keras.models import *
from create_data.generate_dataset import generate_train_test
from keras.utils import to_categorical

x_train, x_test, y_train, y_test = generate_train_test('E:/malware/vec/')
x_train = np.asarray(x_train)
x_test = np.asarray(x_test)
y_train = np.asarray(y_train)
y_test = np.asarray(y_test)
x_train = x_train.reshape((x_train.shape[0], 1, -1))
x_test = x_test.reshape((x_test.shape[0], 1, -1))


y_train = to_categorical(y_train)
y_test = to_categorical(y_test)

input_size = 100
time_step = 1
num_hidden = 128

batch_size = 28

model = Sequential()
model.add(LSTM(units=num_hidden, input_shape=(time_step, input_size), return_sequences=True))
model.add(LSTM(units=num_hidden))
model.add(Dense(9, activation='softmax'))

model.compile(loss='categorical_crossentropy', optimizer='RMSprop', metrics=['accuracy'])

model.fit(x_train, y_train, epochs=10, batch_size=batch_size)

accuracy = model.evaluate(x_test, y_test)
print(accuracy)